<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BeyondThisPoint" xml:space="preserve">
    <value>{0}Wenn Sie weiter gehen, werden Daten geändert.{0}Starten die Datenkopie? (Y|N)</value>
    <comment>{0}Proceeding beyond this point will modify data.{0}Start the data copy? (Y|N)</comment>
  </data>
  <data name="ColumnsMissingSource" xml:space="preserve">
    <value>-- Spalten fehlen in der Quelltabelle:</value>
    <comment>-- Columns missing in source table:</comment>
  </data>
  <data name="ColumnsMissingTarget" xml:space="preserve">
    <value>-- Spalten fehlen in der Zieltabelle: </value>
    <comment>-- Columns missing in target table:</comment>
  </data>
  <data name="CopiedSoFar" xml:space="preserve">
    <value>{0}% bisher kopiert...</value>
    <comment>Copied {0}% so far...</comment>
  </data>
  <data name="Copying" xml:space="preserve">
    <value>{0} wird kopiert.</value>
    <comment>Copying {0}</comment>
  </data>
  <data name="ResizedDataFile" xml:space="preserve">
    <value>Größe der Datendatei angepasst.</value>
    <comment>Resized data file.</comment>
  </data>
  <data name="ExceptionMessage" xml:space="preserve">
    <value>Fehler in {0}: {1}</value>
    <comment>Error in {0}: {1}</comment>
  </data>
  <data name="ResizedLogFile" xml:space="preserve">
    <value>Größe der Protokolldatei angepasst.</value>
    <comment>Resized log file.</comment>
  </data>
  <data name="NeedNumber" xml:space="preserve">
    <value>Ich brauche eine Zahl</value>
    <comment>I need a number.</comment>
  </data>
  <data name="NeedsInvestigation" xml:space="preserve">
    <value>{0} muss untersucht werden.</value>
    <comment>{0} needs to be investigated.</comment>
  </data>
  <data name="NeedsInvestigationLog" xml:space="preserve">
    <value>Muss untersucht werden.</value>
    <comment>Needs to be investigated.</comment>
  </data>
  <data name="NeedYN" xml:space="preserve">
    <value>Ich brauche eine 'Y' oder eine 'N'.</value>
    <comment>I need an 'Y' or an 'N'.</comment>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>{0} is nicht leer.</value>
    <comment>{0} is not empty.</comment>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>{0} nicht gefunden.</value>
    <comment>{0} not found.</comment>
  </data>
  <data name="Optimising" xml:space="preserve">
    <value>Optimierung...</value>
    <comment>Optimising...</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Kennwort:</value>
    <comment>Password:</comment>
  </data>
  <data name="RetrustRelationships" xml:space="preserve">
    <value>Fremdschlüsselbeziehungen wiederbelegte.</value>
    <comment>Retrusted foreign key relationships.</comment>
  </data>
  <data name="SIMPLE" xml:space="preserve">
    <value>Zieldatenbank-Wiederherstellungsmodell auf SIMPLE gesetzt.</value>
    <comment>Target database recovery model set to SIMPLE.</comment>
  </data>
  <data name="SourceDatabase" xml:space="preserve">
    <value>Quelldatenbank: </value>
    <comment>Source Database:</comment>
  </data>
  <data name="SourceIsTarget" xml:space="preserve">
    <value>Die Quellendatenbank und Zieldatenbank müssen unterschiedlich sein.</value>
    <comment>The source database cannot be target database.</comment>
  </data>
  <data name="TablesFound" xml:space="preserve">
    <value>Ich fand {0} Tabellen in {1}.</value>
    <comment>I found {0} tables in {1}.</comment>
  </data>
  <data name="TargetDatabase" xml:space="preserve">
    <value>Zieldatenbank: </value>
    <comment>Target Database:</comment>
  </data>
  <data name="ThatTookMinutes" xml:space="preserve">
    <value>Das brauchte {0} Minuten.</value>
    <comment>That took {0} minutes.</comment>
  </data>
  <data name="LoadingDataTookSeconds" xml:space="preserve">
    <value>Das Datenbeladen brauchte {0} Sekunden.</value>
    <comment>Loading data took {0} seconds.</comment>
  </data>
  <data name="TryConnect" xml:space="preserve">
    <value>Mit {0} verbinden...</value>
    <comment>Will try to connect to {0} ...</comment>
  </data>
  <data name="UpdatedTableStatistics" xml:space="preserve">
    <value>Tabellenstatistiken aktualisiert.</value>
    <comment>Updated table statistics</comment>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Benutzername: </value>
    <comment>Username: </comment>
  </data>
  <data name="YouWillBeCopying" xml:space="preserve">
    <value>{0}Sie kopieren {0} von {1}{0} bis {2}{0}Ist das richtig? (Y|N)</value>
    <comment>{0}You will be copying{0} from {1}{0} to {2}{0}Is this correct? (Y|N)</comment>
  </data>
  <data name="ActivatingConstraintsTookSeconds" xml:space="preserve">
    <value>Die Aktivierung von Einschränkungen dauerte {0} Sekunden</value>
    <comment>Activating constraints took {0} seconds</comment>
  </data>
  <data name="CheckExceptionsSqlFile" xml:space="preserve">
    <value>Vergessen Sie nicht, die Datei exceptions.sql zu überprüfen.</value>
    <comment>Don't forget to check the exceptions.sql file.</comment>
  </data>
  <data name="GoodBye" xml:space="preserve">
    <value>Tschüß.</value>
    <comment>Goodbye.</comment>
  </data>
</root>